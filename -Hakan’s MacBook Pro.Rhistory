my_presidents |>
arrange(desc(term_length), party, elected)
my_presidents |>
summarize(
N = n(),
first_year = min(year(start)),
last_year = max(year(end)),
num_dems = sum(party == "Democratic"),
years = sum(term_length),
avg_term_length = mean(term_length)
)
my_presidents |>
group_by(party) |>
summarize(
N = n(),
first_year = min(year(start)),
last_year = max(year(end)),
num_dems = sum(party == "Democratic"),
years = sum(term_length),
avg_term_length = mean(term_length)
)
# loaded packages
library(here)
library(tidyverse)
library(ggplot2)
library(mdsr)
library(mosaicData)
library(fec16)
here <- here::here()
dpath <- "data"
library(nycflights13)
library(tidyverse)
# loaded packages
library(here)
library(tidyverse)
library(ggplot2)
library(mdsr)
library(mosaicData)
library(fec16)
library(nycflights13)
here <- here::here()
dpath <- "data"
flights
flights |>
filter(month == 1, day == 1)
jan1 <- flights |>
filter(month == 1, day == 1)
jan1 <- flights |>
filter(month == 1, day == 1)
head(jan1)
filter(flights, !(arr_delay > 120 | dep_delay > 120))
filter(flights, arr_delay <= 120, dep_delay <= 120)
flights |>
arrange(year, month, day)
flights |>
arrange(desc(dep_delay))
flights |>
select(year, month, day)
flights |>
rename(tail_num = tailnum)
flights |>
select(time_hour, air_time, everything())
flights_sml <- flights |>
select(year:day,
ends_with("delay"),
distance,
air_time) |>
mutate(gain = dep_delay -arr_delay,
speed = distance/air_time *60) |>
arrange(desc(gain))
flights_sml <- flights |>
select(year:day,
ends_with("delay"),
distance,
air_time) |>
mutate(gain = dep_delay -arr_delay,
speed = distance/air_time *60) |>
arrange(desc(gain))
flights_sml
flights_sml <- flights |>
select(year:day,
ends_with("delay"),
distance,
air_time) |>
mutate(gain = dep_delay -arr_delay,
speed = distance/air_time *60) |>
arrange(desc(gain)) |>
select(gain, everything())
flights_sml
flights_sml <- flights |>
select(year:day,
ends_with("delay"),
distance,
air_time) |>
mutate(gain = dep_delay -arr_delay,
speed = distance/air_time *60) |>
arrange(desc(gain)) |>
select(gain, everything()) |>
filter(gain>75)
flights_sml
flights_sml <- flights |>
select(year:day,
ends_with("delay"),
distance,
air_time) |>
mutate(gain = dep_delay - arr_delay,
speed = distance/air_time *60) |>
arrange(desc(gain)) |>
select(gain, everything()) |>
filter(gain>75)
flights_sml
flights |>
mutate(
gain = dep_delay - arr_time,
hours = air_time /60,
gain_per_hour = gain/hours
)
flights_sml <- flights |>
select(year:day,
ends_with("delay"),
distance,
air_time) |>
mutate(
gain = dep_delay - arr_time,
hours = air_time /60,
gain_per_hour = gain/hours
) |>
arrange(desc(gain_per_hour)) |>
select(gain_per_hour, everything())
flights_sml <- flights |>
select(year:day,
ends_with("delay"),
distance,
air_time,
arr_time,
dep_time) |>
mutate(
gain = dep_delay - arr_time,
hours = air_time /60,
gain_per_hour = gain/hours
) |>
arrange(desc(gain_per_hour)) |>
select(gain_per_hour, everything())
flights_sml
flights_sml <- flights |>
select(year:day,
ends_with("delay"),
distance,
air_time,
arr_time,
dep_time) |>
mutate(
gain = dep_delay - arr_time,
hours = air_time /60,
gain_per_hour = gain/hours
) |>
arrange(desc(gain_per_hour)) |>
select(gain_per_hour, everything()) |>
filter(gain_per_hour > 400)
flights_sml
flights |>
transmute(
gain = dep_delay - arr_delay,
hours = air_time / 60,
gain_per_hour = gain / hours)
flights |>
summarise(delay=mean(dep_delay, na.rm = TRUE))
flights |>
group_by(year, month, day) |>
summarise(delay = mean(dep_delay, na.rm = T))
by_dest <- group_by(flights, dest)
delay <- summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
)
delay <- filter(delay, count > 20, dest != "HNL") |>
# It looks like delays increase with distance up to ~750 miles
# and then decrease. Maybe as flights get longer there's more
# ability to make up delays in the air?
ggplot(aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
flights <- group_by(dest)
flights |>
group_by(dest) |>
summarise(by_dest,
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) |>
filter(delay, count > 20, dest != "HNL") |>
# It looks like delays increase with distance up to ~750 miles
# and then decrease. Maybe as flights get longer there's more
# ability to make up delays in the air?
ggplot(aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
delays <- flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL") |>
ggplot(aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL") |>
ggplot(aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
flights |>
filter(month == 11 | month == 12)
# loaded packages
library(here)
library(tidyverse)
library(ggplot2)
library(mdsr)
library(mosaicData)
library(fec16)
library(nycflights13)
here <- here::here()
dpath <- "data"
presidential |>
select(name, party)
presidential |>
filter(party=="Republican")
presidential |>
select(name, party) |>
filter(party=="Republican")
presidential |>
filter(year(start) > 1973 & party == "Democratic") |>
select(name)
head(flights)
View(flights)
View(flights)
jan1 <- flights |>
filter(month == 1, day == 1)
head(jan1)
table(flights$year)
table(flights$month)
flights |>
arrange(year, month, day) |>
arrange(desc(dep_delay))
flights |>
select(year, month, day) |>
head()
flights |>
mutate(
gain = dep_delay - arr_time,
hours = air_time /60,
gain_per_hour = gain/hours
)|>
head()
summarise(flights, mean(dep_delay, na.rm = TRUE))
flights |>
group_by(year, month, day) |>
summarise(delay = mean(dep_delay, na.rm = T))
flights |>
group_by(year, month, day) |>
summarise(delay = mean(dep_delay, na.rm = T))
flights |>
group_by(year, month, day) |>
summarise(delay = mean(dep_delay, na.rm = T))
flights |>
group_by(year) |>
summarise(delay = mean(dep_delay, na.rm = T))
flights |>
group_by(month) |>
summarise(delay = mean(dep_delay, na.rm = T))
flights %>%
group_by(dest) %>%
summarise(
count = n(),
dist = mean(distance, na.rm = TRUE),
delay = mean(arr_delay, na.rm = TRUE)
) %>%
filter(count > 20, dest != "HNL") |>
ggplot(aes(x = dist, y = delay)) +
geom_point(aes(size = count), alpha = 1/3) +
geom_smooth(se = FALSE)
#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
# It looks like delays increase with distance up to ~750 miles
# and then decrease. Maybe as flights get longer there's more
# ability to make up delays in the air?
# loaded packages
library(here)
library(tidyverse)
library(ggplot2)
library(mdsr)
library(mosaicData)
library(fec16)
library(nycflights13)
here <- here::here()
dpath <- "data"
glimpse(flight)
# loaded packages
library(here)
library(tidyverse)
library(ggplot2)
library(mdsr)
library(mosaicData)
library(fec16)
library(nycflights13)
here <- here::here()
dpath <- "data"
glimpse(flight)
glimpse(flights)
head(airlines)
glimpse(flights_joined)
flights_joined <- flights |>
inner_join(airlines, by= c("carrier"="carrier"))
glimpse(flights_joined)
flights_joined |>
select(carrier, name, flight, origin, dest) |>
head(3)
airports_pt <- airports |>
filter(tz == -8)
nrow(airports_pt)
nyc_dests_pt <- flights |>
inner_join(airports_pt, by = c("dest" = "faa"))
nrow(nyc_dests_pt)
flights_joined |>
left_join(weather)
flights_joined |>
left_join(planes, by="tailnum")
top_dest <- flights |>
count(dest, sort=TRUE) |>
head(10)
flights_joined |>
semi_join(top_dest)
flights |>
anti_join(planes, by = "tailnum") |>
count(tailnum, sort = TRUE)
{r setup, echo=FALSE, message=FALSE}
# loaded packages
library(here)
library(tidyverse)
library(mdsr)
here <- here::here()
dpath <- "data"
student <- read_csv('https://raw.githubusercontent.com/hadley/r4ds/main/data/students.csv')
students <- read_csv("https://pos.it/r4ds-students-csv")
students |>
janitor::clean_names()
billboard
billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank"
)
billboard |>
pivot_longer(
cols = starts_with("wk"),
names_to = "week",
values_to = "rank",
values_drop_na = TRUE
)
who2 |>
pivot_longer(
cols = !(country:year),
names_to = c("diagnosis", "gender", "age"),
names_sep = "_",
values_to = "count"
)
who2
cms_patient_experience
cms_patient_experience |>
distinct(measure_cd, measure_title)
cms_patient_experience |>
pivot_wider(
names_from = measure_cd,
values_from = prf_rate
)
cms_patient_experience |>
pivot_wider(
id_cols = starts_with("org"),
names_from = measure_cd,
values_from = prf_rate
)
# loaded packages
library(here)
library(tidyverse)
library(ggplot2)
library(mdsr)
here <- here::here()
dpath <- "data"
mtcars[1:5, ]
knitr::kable(mtcars[1:5, ], )
knitr::kable(mtcars[1:5, ], )
# loaded packages
library(here)
library(tidyverse)
library(ggplot2)
library(mdsr)
here <- here::here()
dpath <- "data"
# loaded packages
library(here)
library(tidyverse)
library(ggplot2)
library(mdsr)
here <- here::here()
dpath <- "data"
glimpse(mpg)
# Left
ggplot(mpg, aes(x = displ, y = hwy, color = class)) +
geom_point()
# Right
ggplot(mpg, aes(x = displ, y = hwy, shape = class)) +
geom_point()
#> Warning: The shape palette can deal with a maximum of 6 discrete values because more
#> than 6 becomes difficult to discriminate
#> â„¹ you have requested 7 values. Consider specifying shapes manually if you
#>   need that many have them.
#> Warning: Removed 62 rows containing missing values or values outside the scale range
#> (`geom_point()`).
# Left
ggplot(mpg, aes(x = displ, y = hwy, size = class)) +
geom_point()
#> Warning: Using size for a discrete variable is not advised.
# Right
ggplot(mpg, aes(x = displ, y = hwy, alpha = class)) +
geom_point()
#> Warning: Using alpha for a discrete variable is not advised.
# Left
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point()
# Right
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_smooth()
#> `geom_smooth()` using method = 'loess' and formula = 'y ~ x'
# Left
ggplot(mpg, aes(x = displ, y = hwy, shape = drv)) +
geom_smooth()
# Right
ggplot(mpg, aes(x = displ, y = hwy, linetype = drv)) +
geom_smooth()
ggplot(mpg, aes(x = displ, y = hwy, color = drv)) +
geom_point() +
geom_smooth(aes(linetype = drv))
# Left
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_smooth()
# Middle
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_smooth(aes(group = drv))
# Right
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_smooth(aes(color = drv), show.legend = FALSE)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point(aes(color = class)) +
geom_smooth()
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
geom_point(
data = mpg |> filter(class == "2seater"),
color = "red"
) +
geom_point(
data = mpg |> filter(class == "2seater"),
shape = "circle open", size = 3, color = "red"
)
# First
ggplot(mpg, aes(x = hwy)) +
geom_histogram(binwidth = 2)
# Second
ggplot(mpg, aes(x = hwy)) +
geom_density()
# Third
ggplot(mpg, aes(x = hwy)) +
geom_boxplot()
library(ggridges)
ggplot(mpg, aes(x = hwy, y = drv, fill = drv, color = drv)) +
geom_density_ridges(alpha = 0.5, show.legend = FALSE)
#> Picking joint bandwidth of 1.28
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_wrap(~cyl)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(drv ~ cyl)
ggplot(mpg, aes(x = displ, y = hwy)) +
geom_point() +
facet_grid(drv ~ cyl, scales = "free_y")
ggplot(diamonds, aes(x = cut)) +
geom_bar()
diamonds |>
count(cut) |>
ggplot(aes(x = cut, y = n)) +
geom_bar(stat = "identity")
# First
ggplot(mpg, aes(x = drv, color = drv)) +
geom_bar()
# Second
ggplot(mpg, aes(x = drv, fill = drv)) +
geom_bar()
ggplot(mpg, aes(x = drv, fill = class)) +
geom_bar()
